name: Build and Release Roc Dependencies
on:
  push:
    tags:
    - "zig-*"

jobs:
  create-draft-release:
    name: Create Release Draft
    runs-on: ubuntu-latest
    steps:
      - name: Create Release Draft
        uses: softprops/action-gh-release@v2
        with:
          name: "Roc Deps with ${{ github.ref_name }}"
          draft: true

  build-host:
    name: Build and Cache Host Dependencies
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Install Ninja
        run: |
          sudo apt install -y ninja-build

      - name: Build Host Deps
        env:
          CMAKE_GENERATOR: Ninja
        run: |
          ./build host-only

      - name: Cache Host Deps
        uses: actions/cache/save@v4
        with:
          key: "roc-host-deps-${{ github.run_id }}"
          path: out

  build-cross:
    needs: [create-draft-release, build-host]
    name: Build and Release Roc Dependencies
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        target:
        - aarch64-linux-musl
        - aarch64-macos-none
        - aarch64-windows-gnu
        - arm-linux-musleabi
        - i386-linux-musl
        - x86_64-linux-musl
        - x86_64-macos-none
        - x86_64-windows-gnu

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Restore Host Deps
        uses: actions/cache/restore@v4
        with:
          key: "roc-host-deps-${{ github.run_id }}"
          fail-on-cache-miss: true
          path: out

      - name: Install Ninja
        run: |
          sudo apt install -y ninja-build

      - name: Build Deps
        env:
          CMAKE_GENERATOR: Ninja
        run: |
          ./build ${{ matrix.target }} baseline
          mv out/${{ matrix.target }}-baseline out/${{ matrix.target }}

      - name: Archive Deps (Unix)
        if: ${{ !contains(matrix.target, 'windows') }}
        run: |
          tar -cf - -C out ${{ matrix.target }} | xz -9e -v -c - > out/${{ matrix.target }}.tar.xz

      - name: Upload Release Artifact (Unix)
        if: ${{ !contains(matrix.target, 'windows') }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release upload ${{ github.ref_name }} out/${{ matrix.target }}.tar.xz

      - name: Archive Deps (Windows)
        if: ${{ contains(matrix.target, 'windows') }}
        run: |
          (cd out && zip -r -9 ${{ matrix.target }}.zip ${{ matrix.target }})

      - name: Upload Release Artifact (Windows)
        if: ${{ contains(matrix.target, 'windows') }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release upload ${{ github.ref_name }} out/${{ matrix.target }}.zip

